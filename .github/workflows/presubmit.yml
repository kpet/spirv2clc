name: Presubmit
on: [push, pull_request]

jobs:
  format:
    name: Code formatting check
    runs-on: ubuntu-20.04
    steps:
      - name: Install packages
        run: sudo apt-get install -y clang-format
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Check format
        run: |
          ./tests/check-format.sh
  build:
    name: Build ${{ matrix.os }} ${{ matrix.config }}
    needs: format
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-20.04, macos-latest, windows-latest]
        config: [Debug,Release]
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          submodules: recursive
      - name: Setup Ninja
        uses: seanmiddleditch/gha-setup-ninja@master
      - name: Setup ccache
        uses: hendrikmuhs/ccache-action@v1.2
        with:
          variant: sccache
          key: ${{ matrix.os }}-${{ matrix.config }}
      - name: Configure (Linux & MacOS)
        if: ${{ ! contains(matrix.os, 'windows') }}
        shell: bash
        run: |
          cmake \
            -G Ninja \
            -D SPIRV_WERROR=OFF \
            -D SPIRV_SKIP_EXECUTABLES=ON \
            -D SPIRV_SKIP_TESTS=ON \
            -D CMAKE_BUILD_TYPE=${{ matrix.config }} \
            -D CMAKE_C_COMPILER_LAUNCHER=sccache -DCMAKE_CXX_COMPILER_LAUNCHER=sccache \
            -D CMAKE_INSTALL_PREFIX='${{ github.workspace }}/build/install' \
            -S . \
            -B ./build
      - name: Configure (Windows)
        if: ${{ contains(matrix.os, 'windows') }}
        shell: pwsh
        run: |
          $ICD_REG_PATH = 'HKLM:\SOFTWARE\Khronos\OpenCL\Vendors'
          $LAYER_REG_PATH = 'HKLM:\SOFTWARE\Khronos\OpenCL\Layers'
          New-Item -Type Directory ${ICD_REG_PATH}   -Force | Out-Null
          New-Item -Type Directory ${LAYER_REG_PATH} -Force | Out-Null
          Set-ItemProperty -Path ${ICD_REG_PATH}   -Type DWord -Value 0 -Name "${env:GITHUB_WORKSPACE}\build\bin\${{ matrix.config }}\layerloadicd.dll"
          Set-ItemProperty -Path ${LAYER_REG_PATH} -Type DWord -Value 0 -Name "${env:GITHUB_WORKSPACE}\build\bin\${{ matrix.config }}\SPIRV2CLC-Layer.dll"
          cmake `
            -G "Visual Studio 17 2022" `
            -A x64 `
            -T v143 `
            -D SPIRV_WERROR=OFF `
            -D SPIRV_SKIP_EXECUTABLES=ON `
            -D SPIRV_SKIP_TESTS=ON `
            -D CMAKE_BUILD_TYPE=${{ matrix.config }} `
            -D CMAKE_INSTALL_PREFIX='${{ github.workspace }}/build/install' `
            -S . `
            -B ./build
      - name: Build
        run: cmake --build ./build --config ${{ matrix.config }} -j3
      - name: Test
        run: ctest --test-dir ./build --build-config ${{ matrix.config }} --output-on-failure -j3
      - name: Install
        run: cmake --install ./build --config ${{ matrix.config }}
      - uses: actions/upload-artifact@v3
        with:
          name: spirv2clc-${{ matrix.os }}-${{ matrix.config }}
          path: ${{ github.workspace }}/build/install
